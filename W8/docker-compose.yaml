version: "3.9"

services:
  db:
    image: postgres:16-alpine
    environment:
      POSTGRES_USER:     postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB:       postgres
    volumes:
      - ./sql/init.sql:/docker-entrypoint-initdb.d/init.sql:ro
      - pgdata:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 2s
      timeout: 2s
      retries: 10

  redis:
    image: redis:7-alpine
    container_name: redis
    ports:
      - "6379:6379"
    restart: unless-stopped

  charts-generator:
    build:
      context: .
      dockerfile: Dockerfile.python
    volumes:
      - ./static:/app/static
    restart: "no"

  rust:
    build: .
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_started
      charts-generator:
        condition: service_completed_successfully
    environment:
      ROCKET_DATABASES: '{postgres={url="postgres://postgres:postgres@db:5432/postgres"}}'
      REDIS_URL: 'redis://redis:6379'
    volumes:
      - ./uploads:/app/uploads
      - ./static:/app/static:ro
    restart: unless-stopped

  nginx:
    image: nginx:alpine
    ports:
      - "80:80"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - ./static:/usr/share/nginx/html/static:ro
    depends_on:
      - rust
    restart: unless-stopped

volumes:
  pgdata: